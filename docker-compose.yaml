services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "2181" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - external_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      zookeeper:
        condition: service_healthy
      elastic:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "9092" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - ./secrets/kafka.keystore.jks:/etc/kafka/secrets/kafka.keystore.jks
      - ./secrets/kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks
      - ./secrets/cert_creds:/etc/kafka/secrets/cert_creds
    networks:
      - external_network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - external_network

  elastic:
    image: elasticsearch:8.15.0
    ports:
      - "9200:9200"
    environment:
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      - external_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  kibana:
    image: kibana:8.15.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: "http://elastic:9200"
    depends_on:
      elastic:
        condition: service_healthy
    networks:
      - external_network

  connect:
    image: debezium/connect:2.7.3.Final
    ports:
      - "8083:8083"
      - "5005:5005"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_source_connect_statuses

      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: movie
      POSTGRES_HOST: movie_service_postgres
      POSTGRES_HEARTBEAT_INTERVAL_MS: 10000
    volumes:
      - ./lib-registry-doc-debezium:/kafka/connect/libs
      - ./secrets/kafka.keystore.jks:/kafka.keystore.jks
      - ./secrets/kafka.truststore.jks:/kafka.truststore.jks
      - kafka-connect-config:/etc/kafka-connect
      - kafka-connect-data:/var/lib/kafka-connect
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - external_network

volumes:
  kafka-connect-config:
  kafka-connect-data:

networks:
  external_network:
    external: true
